-- migrate:up

CREATE TABLE `t_adm_network_arp` (
  `c_uuid` binary(16) NOT NULL DEFAULT (uuid_to_bin(uuid(),true)) COMMENT 'Device uuid (v4), autogenerated on SQL insert if not provided. NOTE to always insert with UUID_TO_BIN(UUID(), true)',
  `c_data` json NOT NULL COMMENT 'JSON data',
  `c_mac` char(17) GENERATED ALWAYS AS (json_unquote(json_extract(`c_data`,_utf8mb4'$.mac'))) STORED COMMENT '[STORED] Mac address',
  `c_ipv4` char(15) GENERATED ALWAYS AS (json_unquote(json_extract(`c_data`,_utf8mb4'$.ipv4'))) STORED COMMENT '[STORED] IPv4 address',
  `c_vendor` char(255) GENERATED ALWAYS AS (json_unquote(json_extract(`c_data`,_utf8mb4'$.vendor'))) STORED COMMENT '[STORED] Vendor',
  `c_lastseen` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT 'Timestamp: last seen',
  PRIMARY KEY (`c_uuid`),
  UNIQUE KEY `c_mac` (`c_mac`),
  KEY `c_ipv4` (`c_ipv4`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci ROW_FORMAT=DYNAMIC COMMENT='ADM arp-scan network devices (mac addresses).';

CREATE TABLE `t_adm_network_scan` (
  `c_uuid` binary(16) NOT NULL DEFAULT (uuid_to_bin(uuid(),true)) COMMENT 'IP uuid (v4), autogenerated on SQL insert if not provided. NOTE to always insert with UUID_TO_BIN(UUID(), true)',
  `c_scan` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT 'Timestamp of the scan entry',
  `c_data` json NOT NULL COMMENT 'JSON data',
  `c_ipv4` char(15) GENERATED ALWAYS AS (json_unquote(json_extract(`c_data`,_utf8mb4'$.ipv4'))) STORED COMMENT '[STORED] IPv4 address',
  `c_status` varchar(255) GENERATED ALWAYS AS (json_unquote(json_extract(`c_data`,_utf8mb4'$.status'))) STORED COMMENT '[STORED] Status',
  `c_ports` varchar(255) GENERATED ALWAYS AS (json_unquote(json_extract(`c_data`,_utf8mb4'$.ports.open'))) STORED COMMENT '[STORED] Number of open ports',
  PRIMARY KEY (`c_uuid`),
  KEY `c_ipv4` (`c_ipv4`),
  KEY `c_scan` (`c_scan`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci ROW_FORMAT=DYNAMIC COMMENT='ADM nmap network devices (get status+open ports).';

-- migrate:down

DROP TABLE IF EXISTS `t_adm_network_arp`;
DROP TABLE IF EXISTS `t_adm_network_scan`;